@inherits Components.ComponentBase
@using Components
@using MWRCheatSheet.Components
@using System.Runtime.CompilerServices
@inject NavigationManager NavigationManager
@inject HttpClient Http

<MudCard>
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h6">@((MarkupString)Header.Replace(Environment.NewLine, "<br/>"))</MudText>
            @if(!string.IsNullOrWhiteSpace(this.Archive))
            {
                <br/>
                <ExternalLink Href="@Archive" Text="Watch Replays" />
                <CopyContent TextToCopy="@Archive" />
            }
        </CardHeaderContent>
    </MudCardHeader>
    <center><MudImage Src="@ImageUri" Fluid="true" /></center>
    <MudCardContent>
        <MudStack>
            <MudText Typo="Typo.body2" Align="Align.Center">@((Recurrence.Day is null ? "Daily" : $"{Recurrence.Day}s")) @@ @GetNextEvent(this.Recurrence.Day is null ? DateTime.Now.DayOfWeek : this.Recurrence.Day.Value, this.Recurrence.Time, this.Recurrence.TimeZone).ToOffset(TimeZoneInfo.Local.BaseUtcOffset).ToString(" h:mm tt") @TimeZoneInfo.Local.StandardName</MudText>
        </MudStack>
    </MudCardContent>
    <MudCardActions>
        <MudStack Style="width:100%;">
            @if (!string.IsNullOrWhiteSpace(this.Url))
            {
                <MudStack Row="true" Style="width:100%;">
                    <MudSpacer/>
                    <ExternalLink Href="@Url" Text="Join Now!"/>
                    <MudSpacer/>
                </MudStack>
            }
            @if (!string.IsNullOrWhiteSpace(this.Password))
            {
                <MudText Align="Align.Center">Password: @Password</MudText>
            }
            <br/>
            <MudStack Row="true" Style="width:100%;">
                <MudSpacer/>
                <ShareableContent Tooltip="Invitation copied!"
                                  TextToCopy="@Text"
                                  ImageUrl="@ImageUri"/>
                <MudSpacer/>
            </MudStack>
        </MudStack>
    </MudCardActions>
</MudCard>

<MudDialog @bind-IsVisible="_showImageDialog.ShowImageDialog" Options="@(new DialogOptions() { FullWidth = true, NoHeader = true })">
    <DialogContent>
        <MudImage Src="@(_showImageDialog.ImageUri)" Fluid="true" Class="rounded-lg" />
    </DialogContent>
</MudDialog>

@code {
    private (bool ShowImageDialog, string ImageUri) _showImageDialog;
    
    [Parameter]
    public string Header { get; set; } = "72-Hour Money Challenge!";

    [Parameter]
    public string ImageUri { get; set; }

    [Parameter]
    public string Text { get; set; }

    [Parameter]
    public (DayOfWeek? Day, TimeOnly Time, TimeZoneInfo TimeZone) Recurrence { get; set; }

    [Parameter]
    public string? Url { get; set; }

    [Parameter]
    public string? Password { get; set; }

    [Parameter]
    public string? Archive { get; set; }
}
