@inherits Components.ComponentBase

<MudStack Row="true">
    <MudSpacer />
    <MudText Align="Align.Center">
        @if (this.Description != null)
        {
            @this.Description
        }
        else
        {
            <div>
                @this.ChildContent
            </div>
        }
        <br />
        <MudStack Row="true">
            <MudSpacer/>
            <MudPaper Class="align-start d-flex" Outlined="false" Elevation="0">
                <MudTooltip Text="@Tooltip" IsVisible="_showCopyTooltip" ShowOnClick="true" ShowOnFocus="false" ShowOnHover="false">
                    <MudIconButton OnClick="OnCopyClick" Icon="@Icons.Material.Filled.ContentCopy" Color="Color.Primary"/>
                </MudTooltip>
                <MudTooltip Text="@Tooltip" IsVisible="_showShareTooltip" ShowOnClick="true" ShowOnFocus="false" ShowOnHover="false">
                    <MudIconButton OnClick="OnShareClick" Icon="@Icons.Material.Filled.Share" Color="Color.Primary"/>
                </MudTooltip>
            </MudPaper>
            <MudSpacer/>
        </MudStack>
    </MudText>
    <MudSpacer />
</MudStack>

@code {
    private bool _showCopyTooltip;
    private bool _showShareTooltip;

    [Parameter]
    public string? Description { get; set; }

    [Parameter]
    public string TextToCopy { get; set; }

    [Parameter]
    public string Tooltip { get; set; }

    [Parameter]
    public string ImageUrl { get; set; } = GetImageUrl(Image.MoneyChallengeLogo);

    private async Task OnCopyClick()
    {
        await this.CopyTextToClipboardAsync(this.TextToCopy);

        _showCopyTooltip = true;
        base.StateHasChanged();

        await Task.Delay(3 * 1000);

        _showCopyTooltip = false;
        base.StateHasChanged();
    }

    private async Task OnShareClick()
    {
        await this.ShareMessageAsync(this.TextToCopy, this.ImageUrl);

        _showShareTooltip = true;
        base.StateHasChanged();

        await Task.Delay(3 * 1000);

        _showShareTooltip = false;
        base.StateHasChanged();
    }
}
